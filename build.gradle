plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.1'
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'de.b3nk4n.gamecloud'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

configurations {
    compileOnly {
        // annotations require a `./gradlew clean build` to trigger metadata generation to take effect as intelli sense in IDE
        extendsFrom annotationProcessor
    }
}

ext {
    set('springCloudVersion', '2022.0.3')
    set('testcontainersVersion', '1.18.3')
    set('testKeycloakVersion', '3.0.0')
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation 'org.springframework.retry:spring-retry'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    runtimeOnly 'org.postgresql:postgresql'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-webflux'
    testImplementation 'org.testcontainers:postgresql'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.testcontainers:junit-jupiter'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    testImplementation "com.github.dasniko:testcontainers-keycloak:${testKeycloakVersion}"
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
    }
}

// configure Buildpacks
bootBuildImage {
    imageName = "gamecloud-${project.name}"
    environment = ['BP_JVM_VERSION': '17.*']

    docker {
        publishRegistry {
            username = project.findProperty('registryUsername')
            password = project.findProperty('registryToken')
            url = project.findProperty('registryUrl')
        }
    }
}

bootRun {
    // active the demo profile when using the bootRun command during local development
    systemProperty 'spring.profiles.active', 'demo'
}

tasks.named('test') {
    useJUnitPlatform()
}
